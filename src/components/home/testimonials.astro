---
import TestimonialCard from "../cards/testimonial-card.astro";
import Image from "astro/components/Image.astro";
import blueBgShapes from "../../../public/images/home/blue-bg-shapes.png";
---

<section class="section bg-primary relative overflow-hidden">
  <!-- Background Shapes Image -->
  <div class="absolute inset-0">
    <Image
      src={blueBgShapes}
      alt="Blue background shapes"
      class="h-full w-full object-cover opacity-20"
      loading="lazy"
    />
  </div>

  <div class="relative z-10 container mx-auto px-4">
    <!-- Header Content -->
    <div class="mb-10 max-w-4xl sm:mb-16">
      <h4
        class="font-bold text-white uppercase sm:text-lg md:text-xl lg:text-2xl"
      >
        TESTIMONIALS
      </h4>

      <h2
        class="mt-2.5 mb-4 text-3xl font-bold text-white uppercase lg:text-4xl"
      >
        BUILDING CREDIBILITY AND TRUST
      </h2>

      <p class="text-lg text-white/90!">
        Here's what some of our clients are saying about our service:
      </p>
    </div>

    <!-- Testimonial Carousel -->
    <div class="relative">
      <!-- Carousel Container -->
      <div class="carousel-container overflow-hidden">
        <div
          class="carousel-track flex transition-transform duration-500 ease-in-out"
          id="testimonial-track"
        >
          <!-- Testimonial Card 1 -->
          <div
            class="carousel-slide w-full flex-shrink-0 px-4 md:w-1/2 lg:w-1/3"
          >
            <TestimonialCard
              date="26. June 2024."
              clientName="Matt Briglia"
              clientTitle="Lorem ipsum dolore"
              testimonial="SeniorLead helped us fill vacancies faster than we ever thought possible. Their approach is both effective and affordable."
              rating={5}
            />
          </div>

          <!-- Testimonial Card 2 -->
          <div
            class="carousel-slide w-full flex-shrink-0 px-4 md:w-1/2 lg:w-1/3"
          >
            <TestimonialCard
              date="15. July 2024."
              clientName="Sarah Johnson"
              clientTitle="Facility Director"
              testimonial="Thanks to Dan and his team, we've seen a significant increase in inquiries and admissions."
              rating={5}
            />
          </div>

          <!-- Testimonial Card 3 -->
          <div
            class="carousel-slide w-full flex-shrink-0 px-4 md:w-1/2 lg:w-1/3"
          >
            <TestimonialCard
              date="03. August 2024."
              clientName="Michael Chen"
              clientTitle="Operations Manager"
              testimonial="Thanks to Dan and his team, we've seen a significant increase in inquiries and admissions."
              rating={5}
            />
          </div>

          <!-- Additional testimonial cards for better carousel experience -->
          <div
            class="carousel-slide w-full flex-shrink-0 px-4 md:w-1/2 lg:w-1/3"
          >
            <TestimonialCard
              date="12. September 2024."
              clientName="Emily Rodriguez"
              clientTitle="HR Director"
              testimonial="The quality of candidates SeniorLead provides is outstanding. We've hired three excellent team members through their service."
              rating={5}
            />
          </div>

          <div
            class="carousel-slide w-full flex-shrink-0 px-4 md:w-1/2 lg:w-1/3"
          >
            <TestimonialCard
              date="28. October 2024."
              clientName="David Thompson"
              clientTitle="CEO"
              testimonial="SeniorLead transformed our recruitment process. We're now filling positions 50% faster than before."
              rating={5}
            />
          </div>
        </div>
      </div>

      <!-- Navigation Controls -->
      <div class="mt-8 flex items-center justify-center">
        <!-- Previous Arrow -->
        <button
          id="prev-btn"
          class="mr-[60px] flex h-10 w-10 items-center justify-center rounded-full bg-white/20 text-white transition-all hover:scale-110 hover:bg-white/30 focus:ring-2 focus:ring-white/50 focus:outline-none disabled:cursor-not-allowed disabled:opacity-50 disabled:hover:scale-100"
          aria-label="Previous testimonials"
        >
          <svg
            class="h-5 w-5"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M15 19l-7-7 7-7"></path>
          </svg>
        </button>

        <!-- Pagination Dots -->
        <div class="flex justify-center space-x-2" id="pagination-dots">
          <!-- Dots will be dynamically generated by JavaScript -->
        </div>

        <!-- Next Arrow -->
        <button
          id="next-btn"
          class="ml-[60px] flex h-10 w-10 items-center justify-center rounded-full bg-white/20 text-white transition-all hover:scale-110 hover:bg-white/30 focus:ring-2 focus:ring-white/50 focus:outline-none disabled:cursor-not-allowed disabled:opacity-50 disabled:hover:scale-100"
          aria-label="Next testimonials"
        >
          <svg
            class="h-5 w-5"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M9 5l7 7-7 7"></path>
          </svg>
        </button>
      </div>
    </div>
  </div>
</section>

<script>
  class TestimonialCarousel {
    track: HTMLElement | null;
    prevBtn: HTMLButtonElement | null;
    nextBtn: HTMLButtonElement | null;
    dots: NodeListOf<Element>;
    slides: NodeListOf<Element>;
    currentSlide: number;
    totalSlides: number;
    slidesPerView: number;

    constructor() {
      this.track = document.getElementById("testimonial-track");
      this.prevBtn = document.getElementById("prev-btn") as HTMLButtonElement;
      this.nextBtn = document.getElementById("next-btn") as HTMLButtonElement;
      this.dots = document.querySelectorAll("#pagination-dots [data-slide]");
      this.slides = document.querySelectorAll(".carousel-slide");

      this.currentSlide = 0;
      this.totalSlides = this.slides.length;
      this.slidesPerView = this.getSlidesPerView();

      this.init();
    }

    getSlidesPerView() {
      const width = window.innerWidth;
      if (width >= 1024) return 3; // lg: 3 slides
      if (width >= 768) return 2; // md: 2 slides
      return 1; // sm: 1 slide
    }

    init() {
      if (!this.track || !this.prevBtn || !this.nextBtn) {
        console.error("Required carousel elements not found");
        return;
      }

      this.generateDots();
      this.updateCarousel();
      this.bindEvents();
      this.updateNavigationButtons();

      // Handle window resize
      window.addEventListener("resize", () => {
        this.slidesPerView = this.getSlidesPerView();
        this.generateDots();
        this.updateCarousel();
        this.bindEvents();
        this.updateNavigationButtons();
      });
    }

    generateDots() {
      const dotsContainer = document.getElementById("pagination-dots");
      if (!dotsContainer) return;

      // Clear existing dots
      dotsContainer.innerHTML = "";

      // For infinite carousel, show dots for all possible slide positions
      const maxDots = Math.max(1, this.totalSlides - this.slidesPerView + 1);

      // Generate dots
      for (let i = 0; i < maxDots; i++) {
        const dot = document.createElement("div");
        dot.className = `h-3 w-3 cursor-pointer rounded-full transition-all hover:bg-white/80 ${
          i === this.currentSlide ? "bg-white" : "bg-white/30 hover:bg-white/60"
        }`;
        dot.setAttribute("data-slide", i.toString());
        dot.setAttribute("aria-label", `Go to slide ${i + 1}`);
        dot.setAttribute("role", "button");
        dot.setAttribute("tabindex", "0");

        dotsContainer.appendChild(dot);
      }

      // Update dots reference
      this.dots = document.querySelectorAll("#pagination-dots [data-slide]");
    }

    bindEvents() {
      if (this.prevBtn) {
        this.prevBtn.addEventListener("click", () => this.prevSlide());
      }
      if (this.nextBtn) {
        this.nextBtn.addEventListener("click", () => this.nextSlide());
      }

      this.dots.forEach((dot: Element, index: number) => {
        dot.addEventListener("click", () => this.goToSlide(index));

        // Add keyboard support for accessibility
        dot.addEventListener("keydown", (e: Event) => {
          const keyEvent = e as KeyboardEvent;
          if (keyEvent.key === "Enter" || keyEvent.key === " ") {
            keyEvent.preventDefault();
            this.goToSlide(index);
          }
        });
      });
    }

    updateCarousel() {
      if (!this.track) return;

      const slideWidth = 100 / this.slidesPerView;
      const translateX = -(this.currentSlide * slideWidth);
      this.track.style.transform = `translateX(${translateX}%)`;

      this.updateDots();
    }

    updateDots() {
      this.dots.forEach((dot: Element, index: number) => {
        if (index === this.currentSlide) {
          dot.classList.remove("bg-white/30");
          dot.classList.add("bg-white");
        } else {
          dot.classList.remove("bg-white");
          dot.classList.add("bg-white/30");
        }
      });
    }

    updateNavigationButtons() {
      // For infinite carousel, buttons are never disabled
      if (this.prevBtn) {
        this.prevBtn.disabled = false;
      }
      if (this.nextBtn) {
        this.nextBtn.disabled = false;
      }
    }

    prevSlide() {
      // Infinite carousel: wrap to last slide if at beginning
      if (this.currentSlide === 0) {
        this.currentSlide = this.totalSlides - this.slidesPerView;
      } else {
        this.currentSlide--;
      }
      this.updateCarousel();
      this.updateNavigationButtons();
    }

    nextSlide() {
      // Infinite carousel: wrap to first slide if at end
      if (this.currentSlide >= this.totalSlides - this.slidesPerView) {
        this.currentSlide = 0;
      } else {
        this.currentSlide++;
      }
      this.updateCarousel();
      this.updateNavigationButtons();
    }

    goToSlide(slideIndex: number) {
      // For infinite carousel, allow any valid slide index
      const maxSlide = Math.max(0, this.totalSlides - this.slidesPerView);
      if (slideIndex < 0 || slideIndex > maxSlide) {
        console.warn(
          `Invalid slide index: ${slideIndex}. Valid range: 0-${maxSlide}`,
        );
        return;
      }

      this.currentSlide = slideIndex;
      this.updateCarousel();
      this.updateNavigationButtons();
    }
  }

  // Initialize carousel when DOM is loaded
  document.addEventListener("DOMContentLoaded", () => {
    new TestimonialCarousel();
  });
</script>
